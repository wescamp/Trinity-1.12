# wmllint: no translatables

# used to be in BMR, but is only used in Trinity

#define BMR_STORE_SIDE SIDE

    # A macro to avoid the recall list crap
    # updated to use global variable instead of savefiles
    # Why did I do that ^ ?  Changing it back...
    [event]
        name=victory
        [store_unit]
            variable=side_{SIDE}
            [filter]
                side={SIDE}
                [not]
                    canrecruit=yes
                [/not]
            [/filter]
            kill=yes
        [/store_unit]
        [store_unit]
            [filter]
                side={SIDE}
                canrecruit=yes
            [/filter]
            kill=yes
            variable=leader_{SIDE}
        [/store_unit]
        [kill]
            side={SIDE}
        [/kill]
        # We don't want to keep adding to the global variables, but if we clear this
        # in the unstoring/prestart event, you can't restart the scenario.  I think this is OK though.

	# Unless you want to go back some scenarios...
    #ifdef __UNUSED__
        [clear_global_variable]
            namespace=Trinity
            global=global_leader_{SIDE}
            side={SIDE}
            immediate=yes
        [/clear_global_variable]
        [clear_global_variable]
            namespace=Trinity
            global=global_side_{SIDE}
            side={SIDE}
            immediate=yes
        [/clear_global_variable]
        [set_global_variable]
            namespace=Trinity
            from_local=side_{SIDE}
            to_global=global_side_{SIDE}
            side={SIDE}
            immediate=yes
        [/set_global_variable]
        [set_global_variable]
            namespace=Trinity
            from_local=leader_{SIDE}
            to_global=global_leader_{SIDE}
            side={SIDE}
            immediate=yes
        [/set_global_variable]
        {CLEAR_VARIABLE leader_{SIDE}}
        {CLEAR_VARIABLE side_{SIDE}}
    #endif
    [/event]

#enddef

#define BMR_RESTORE_SIDE SIDE

# removing the "global variable" stuff, what was that hack supposed to get around?
    [event]
        name=prestart
#        [get_global_variable]
#            namespace=Trinity
#            from_global=global_leader_{SIDE}
#            to_local=leader_{SIDE}
#            side={SIDE}
#        [/get_global_variable]
        [store_unit]
            [filter]
                side={SIDE}
                canrecruit=yes
            [/filter]
            variable=oldleader
            kill=yes
        [/store_unit]
        [set_variable]
            name=leader_{SIDE}.x
            value=$oldleader.x
        [/set_variable]
        [set_variable]
            name=leader_{SIDE}.y
            value=$oldleader.y
        [/set_variable]
        # ya never know
        [kill]
            side={SIDE}
            canrecruit=yes
        [/kill]
        # does this work? Fix this <--- I had unstored the variable too soon...
        [set_variable]
            name=leader_{SIDE}.hitpoints
            value=$leader_{SIDE}.max_hitpoints
        [/set_variable]
        #	[wml_message]
        #	    message="leader_SIDE.hitpoint= $leader_{SIDE}.hitpoints|"
        #	    logger=error
        #	[/wml_message]
        [set_variable]
            name=leader_{SIDE}.moves
            value=$leader_{SIDE}.max_moves
        [/set_variable]
        [unstore_unit]
            variable=leader_{SIDE}
        [/unstore_unit]
        {CLEAR_VARIABLE leader_{SIDE}}
#        [get_global_variable]
#            namespace=Trinity
#            from_global=global_side_{SIDE}
#            to_local=side_{SIDE}
#            side={SIDE}
#        [/get_global_variable]

        {FOREACH side_{SIDE} index}
            [set_variable]
                name=side_{SIDE}[$index].hitpoints
                value=$side_{SIDE}[$index].max_hitpoints
            [/set_variable]
            # This part works
            [set_variable]
                name=side_{SIDE}[$index].x
                value=recall
            [/set_variable]
            [set_variable]
                name=side_{SIDE}[$index].y
                value=recall
            [/set_variable]
            [unstore_unit]
                variable=side_{SIDE}[$index]
                find_vacant=no
            [/unstore_unit]
        {NEXT index}
        {CLEAR_VARIABLE side_{SIDE}}
    [/event]

#enddef
